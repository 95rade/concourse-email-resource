#! /usr/bin/env python3

from datetime import datetime
from contextlib import contextmanager
from email.mime.text import MIMEText
import json
import os
from smtplib import SMTP
import subprocess as sub
import sys
import time

from common import get_payload


def put(src):
    print("Using dir {}".format(src), file=sys.stderr)
    payload = get_payload()
    subject = get_subject(src, payload)
    message = get_message(src, payload)

    message['Subject'] = subject
    message['From'] = get_sender(payload)
    message['To'] = get_recipients(payload)

    with postfix():
        with SMTP('localhost') as smtp:
            smtp.send_message(message)
            # This is lame, but it seems to take a while until postfix delivers the message
            time.sleep(1)

    print(json.dumps({
        'version': {'version': datetime.isoformat(datetime.now())},
        'metadata': [
            {'name': 'subject', 'value': subject},
        ]
    }))


def get_sender(payload):
    return payload['source']['from']


def get_recipients(payload):
    return payload['params']['to']


def get_subject(src, payload):
    with open(os.path.join(src, payload['params']['subject'])) as fp:
        subject = fp.read()
    return "Build #{}: {}".format(os.environ.get('BUILD_ID', 'X'), subject)


def get_message(src, payload):
    with open(os.path.join(src, payload['params']['body'])) as fp:
        content = fp.read()
    content += "\n\nDetails: {}/builds/{}".format(os.environ.get('ATC_EXTERNAL_URL'),
                                                  os.environ.get('BUILD_ID'))
    return MIMEText(content)


@contextmanager
def postfix():
    postfix_cmd('start')
    yield
    postfix_cmd('flush')
    postfix_cmd('stop')


def postfix_cmd(command):
    devnull = open(os.devnull, 'w')
    sub.check_call(['postfix', command], stdout=devnull, stderr=sub.STDOUT)


if __name__ == '__main__':
    put(sys.argv[1])
